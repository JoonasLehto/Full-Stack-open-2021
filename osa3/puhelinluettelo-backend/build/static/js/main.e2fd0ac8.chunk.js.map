{"version":3,"sources":["services/persons.js","components/notification.js","App.js","index.js"],"names":["baseUrl","exports","getAllPersons","axios","get","then","response","data","createPerson","newObject","post","updatePerson","id","put","deletePerson","delete","Notification","message","isError","className","Filter","options","value","onChange","Button","text","method","onClick","PersonForm","onSubmit","nameInput","numberInput","type","Persons","persons","filter","removeAction","filteredPersons","person","name","toLowerCase","includes","map","style","marginRight","number","toBeRemoved","window","confirm","App","useState","setPersons","personService","useEffect","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","clearMessageTimeout","undefined","displayMessage","clearTimeout","setTimeout","handleChange","updateMethod","event","target","filterOptions","formOptions","preventDefault","existingPerson","find","element","newPerson","catch","error","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2fd0ac8.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAllPersons = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst createPerson = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n} \r\n\r\nconst exports = {\r\n    getAllPersons,\r\n    createPerson,\r\n    updatePerson,\r\n    deletePerson\r\n}\r\n\r\nexport default exports","const Notification = ({ message, isError=false }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    const className = isError ? \"notification error\" : \"notification\"\r\n\r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\n\nimport personService from './services/persons'\n\nimport Notification from './components/notification'\n\nconst Filter = ({ options }) => {\n  return (\n    <div>\n      filter shown with: <input\n        value={options.value}\n        onChange={options.onChange}\n        />\n    </div>\n  )\n}\n\nconst Button = ({ text, method }) => {\n  return (\n    <button onClick={method}>{text}</button>\n  )\n}\n\nconst PersonForm = ({ options }) => {\n  return (\n    <form onSubmit={options.onSubmit}>\n        <div>\n          name: <input\n            value={options.nameInput.value}\n            onChange={options.nameInput.onChange}\n            />\n        </div>\n        <div>\n          number: <input\n            value={options.numberInput.value}\n            onChange={options.numberInput.onChange}\n            />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Persons = ({ persons, filter, removeAction }) => {\n  const filteredPersons = persons.filter(person => {\n    return person.name.toLowerCase().includes(filter.toLowerCase())\n  })\n\n  const removeConfirm = toBeRemoved => () => {\n    if (window.confirm(`Delete ${toBeRemoved.name}`)) {\n      removeAction(toBeRemoved)\n    }\n  }\n\n  return (\n    <div>\n      {filteredPersons.map(person => (\n        <div key={person.name}>\n          <span style={{ marginRight: \"10px\" }}>{`${person.name} ${person.number}`}</span>\n          <Button text=\"delete\" method={removeConfirm(person)}/>\n        </div> \n      ))}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const getAllPersons = () => personService.getAllPersons()\n    .then(data => {\n      setPersons(data)\n    })\n\n  useEffect(() => { getAllPersons() }, [])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter ] = useState('')\n\n  const [ notification, setNotification] = useState({\n    message: null,\n    isError: false\n  })\n  var clearMessageTimeout = undefined\n\n\n  const displayMessage = message => {\n    if (clearMessageTimeout) {\n      clearTimeout(clearMessageTimeout)\n    }\n    setNotification(message)\n    clearMessageTimeout = setTimeout(() => {\n      setNotification({\n        message: null,\n        isError: false\n      })\n    }, 5000)\n  }\n\n  const handleChange = updateMethod => event => {\n    updateMethod(event.target.value)\n  }\n\n  const addOrUpdatePerson = event => {\n    event.preventDefault()\n\n    const existingPerson = persons.find(element => {\n      return element.name === newName\n    })\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (existingPerson === undefined) {\n      personService.createPerson(newPerson)\n        .then(() => {\n          displayMessage({\n            message: `Added ${newPerson.name}`,\n            isError: false\n          })\n          setNewName('')\n          setNewNumber('')\n          getAllPersons()\n        })\n    } else {\n      if (window.confirm(`${newPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\n        personService.updatePerson(existingPerson.id, newPerson)\n          .then(() => {\n            displayMessage({\n              message: `Updated ${newPerson.name}`,\n              isError: false\n            })\n            setNewName('')\n            setNewNumber('')\n            getAllPersons()\n          })\n          .catch(error => {\n            if (error && error.response && error.response.status === 404) {\n              displayMessage({\n                message: `Information of ${newPerson.name} has already been removed from server`,\n                isError: true\n              })\n            } else {\n              displayMessage({\n                message: `Unknown error occurred while deleting ${newPerson.name} from server`,\n                isError: true\n              })\n            }\n            getAllPersons()\n          })\n      }\n    }\n  }\n\n  const removePerson = person => {\n    personService.deletePerson(person.id)\n        .then(() => {\n          displayMessage({\n            message: `Deleted ${person.name}`,\n            isError: false\n          })\n          getAllPersons()\n        })\n        .catch(error => {\n          if (error && error.response && error.response.status === 404) {\n            displayMessage({\n              message: `Information of ${person.name} has already been removed from server`,\n              isError: true\n            })\n          } else {\n            displayMessage({\n              message: `Unknown error occurred while deleting ${person.name} from server`,\n              isError: true\n            })\n          }\n          getAllPersons()\n        })\n  }\n\n  const filterOptions = {\n    value: filter,\n    onChange: handleChange(setFilter)\n  }\n\n  const formOptions = {\n    onSubmit: addOrUpdatePerson,\n    nameInput: {\n      value: newName,\n      onChange: handleChange(setNewName)\n    },\n    numberInput: {\n      value: newNumber,\n      onChange: handleChange(setNewNumber)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification.message} isError={notification.isError} />\n      <Filter options={filterOptions} />\n      <h3>Add a new</h3>\n      <PersonForm options={formOptions} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} removeAction={removePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}